// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WallPaperGenerator.Data;

#nullable disable

namespace WallPaperGenerator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240802074659_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("WallPaperGenerator.Models.WallpaperInfo", b =>
                {
                    b.Property<int>("WallPaperInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WeatherDataId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WallPaperInfoID");

                    b.HasIndex("WeatherDataId");

                    b.ToTable("Wallpapers");
                });

            modelBuilder.Entity("WallPaperGenerator.Models.WeatherData", b =>
                {
                    b.Property<int>("WeatherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCapturedDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("TemperatureCelsius")
                        .HasColumnType("REAL");

                    b.HasKey("WeatherID");

                    b.ToTable("WeatherData");
                });

            modelBuilder.Entity("WallPaperGenerator.Models.WallpaperInfo", b =>
                {
                    b.HasOne("WallPaperGenerator.Models.WeatherData", "WeatherData")
                        .WithMany()
                        .HasForeignKey("WeatherDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeatherData");
                });
#pragma warning restore 612, 618
        }
    }
}
